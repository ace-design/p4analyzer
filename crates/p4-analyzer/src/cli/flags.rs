xflags::xflags! {
	src "./src/cli/flags.rs"

	/// A Language Server Protocol (LSP) implementation for the P4 programming
	/// language (see https://p4.org).
	///
	cmd p4-analyzer {
		/// Starts executing the LSP server. Default command.
		default cmd server {
			/// Use JSON-RPC over 'stdio' transport.
			optional --stdio
		}
	}
}
// generated start
// The following code is generated by `xflags` macro.
// Run `env UPDATE_XFLAGS=1 cargo build` to regenerate.
#[derive(Debug)]
pub struct P4Analyzer {
	pub subcommand: P4AnalyzerCmd,
}

#[derive(Debug)]
pub enum P4AnalyzerCmd {
	Server(Server),
}

#[derive(Debug)]
pub struct Server {
	pub stdio: bool,
}

impl P4Analyzer {
	#[allow(dead_code)]
	pub fn from_env_or_exit() -> Self {
		Self::from_env_or_exit_()
	}

	#[allow(dead_code)]
	pub fn from_env() -> xflags::Result<Self> {
		Self::from_env_()
	}

	#[allow(dead_code)]
	pub fn from_vec(args: Vec<std::ffi::OsString>) -> xflags::Result<Self> {
		Self::from_vec_(args)
	}
}
// generated end
